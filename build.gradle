buildscript {
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:0.39.0"
    }
}

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.ben-manes.versions' version '0.39.0'
}

application {
    applicationDefaultJvmArgs = ['--add-opens=java.base/java.nio=ALL-UNNAMED']
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
        content {
            includeGroup 'org.quelea'
        }
        mavenContent {
            snapshotsOnly()
        }
    }
}

javafx {
    version = "21"
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media', 'javafx.swing', 'javafx.web' ]
}

ext {
    versionsuffix = System.properties["versionsuffix"]!=null ? System.properties["versionsuffix"] : project.queleaversion

    JavaAppName="quelea-" + versionsuffix + "-java-app.tar.gz"
}

tasks.withType(JavaCompile) {
    configure(options) {
        options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
    }
}

task removeDist(type: Delete) {
    delete "dist"
}

compileJava   {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

clean.finalizedBy(removeDist)
compileJava.finalizedBy(dependencyUpdates)

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
ext.mainClass = 'org.quelea.windows.main.MainStub'

task copyToDist {
    doLast {
        copy {from "themes" into project.distdir + "/themes"}
        copy {from "icons" into project.distdir + "/icons"}
        copy {from "bibles" into project.distdir + "/bibles"}
        copy {from "server" into project.distdir + "/server"}
        copy {from "vid" into project.distdir + "/vid"}
        copy {from "vbs" into project.distdir + "/vbs"}
        copy {from "licenses" into project.distdir + "/licenses"}
        copy {from "languages" into project.distdir + "/languages"}
        copy {from "dictionaries" into project.distdir + "/dictionaries"}
        copy {from "img" into project.distdir + "/img"}
        copy {from "timer" into project.distdir + "/timer"}
        copy {from "src" into project.distdir + "/src"}
        copy {from file("build/libs/Quelea.jar") into file(project.distdir)}
        copy {from file("README.TXT") into file(project.distdir)}
        copy {from file("quelea.properties") into file(project.distdir)}
        copy {from file("scheduleformat.xsl") into file(project.distdir)}
        copy {from file("songformat.xsl") into file(project.distdir)}
        copy {from file("fopcfg.xml") into file(project.distdir)}
        copy {from file("licenses/gplv3.txt") into file(project.distdir) rename { String filename -> return "LICENSE.txt"}}
        copy {from file("licenses/copyright") into file(project.distdir + "/queleadoc")}
    }
}

task labelcheck(type:JavaExec) {
    mainClass = 'org.quelea.services.languages.LabelChecker'
    classpath = sourceSets.main.runtimeClasspath
}

task dist(type: GradleBuild) {
    tasks = ['labelcheck', 'copyToDist', 'tar', 'releaseSummary']
}

dependencies {
    implementation 'com.googlecode.paradoxdriver:paradoxdriver:1.5.0'
    implementation 'com.github.berry120.jopenlyrics:jopenlyrics:2.0'
    implementation group: 'org.hsqldb', name: 'hsqldb', version: '2.6.0'
    implementation group: 'org.apache.poi', name: 'poi-scratchpad', version: '5.2.5'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.5'
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.5'
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.36.0.3'
    implementation group: 'org.apache.avalon.framework', name: 'avalon-framework-api', version: '4.3.1'
    implementation group: 'org.apache.avalon.framework', name: 'avalon-framework-impl', version: '4.3.1'

    implementation 'net.java.dev.jna:jna:5.10.0'
    implementation 'net.java.dev.jna:jna-platform:5.10.0'
    implementation 'org.freedesktop.gstreamer:gst1-java-core:1.4.0'
    implementation 'org.freedesktop.gstreamer:gst1-java-fx:0.9.0'

    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.8'
    implementation group: 'com.healthmarketscience.jackcess', name: 'jackcess', version: '4.0.1'
    implementation group: 'org.apache.lucene', name: 'lucene-core', version: '8.9.0'
    implementation group: 'org.apache.lucene', name: 'lucene-queryparser', version: '8.9.0'
    implementation group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '8.9.0'
    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.17'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.13'
    implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.6'
    implementation group: 'com.github.albfernandez', name: 'juniversalchardet', version: '2.4.0'
    implementation group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.6.15.Final'
    implementation group: 'com.google.zxing', name: 'core', version: '3.4.1'
    implementation group: 'com.google.zxing', name: 'javase', version: '3.4.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'
    implementation group: 'com.memetix', name: 'microsoft-translator-java-api', version: '0.6.2'
    implementation group: 'org.openoffice', name: 'jurt', version: '4.1.2'
    implementation group: 'org.openoffice', name: 'juh', version: '4.1.2'
    implementation group: 'org.apache.xmlgraphics', name: 'fop', version: '2.3'
    implementation group: 'org.quelea', name: 'planning-center', version: '0.3-SNAPSHOT', changing: true

    implementation group: 'org.openoffice', name: 'unoil', version: '4.1.2'
    implementation group: 'org.openoffice', name: 'bootstrap-connector', version: '0.1.1'

    implementation group: 'com.aparapi', name: 'aparapi', version: '1.10.0'

    implementation group: 'org.jflac', name: 'jflac-codec', version: '1.5.2'
    implementation group: 'org.jcraft', name: 'jorbis', version: '0.0.17'

    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '3.0.2'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '3.0.2'
    implementation group: 'javax.activation', name: 'activation', version: '1.1.1'

    implementation group: 'com.dlsc.preferencesfx', name: 'preferencesfx-core', version: '11.17.0'

    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.32'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.2'
}

mainClassName = 'org.quelea.windows.main.MainStub'
jar {
    duplicatesStrategy = duplicatesStrategy.EXCLUDE
    
    manifest {
        attributes (
                'Main-Class': 'org.quelea.windows.main.MainStub',
        )    
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task tar(type: Tar) {
    archiveFileName = JavaAppName
    destinationDirectory = file("dist/standalone/")
    compression = Compression.GZIP

    from 'dist/'
    into "Quelea-${versionsuffix}-java-app"
    include "lib/",
            "bibles/",
            "dictionaries/",
            "icons/",
            "img/",
            "languages/",
            "licenses/",
            "server/",
            "themes/",
            "vid/",
            "fopcfg.xml",
            "quelea.properties",
            "scheduleformat.xsl",
            "songformat.xsl",
            "Quelea.jar"
}

task releaseSummary(type:JavaExec) {
    mainClass = 'org.quelea.services.utils.ReleaseSummaryGenerator'
    classpath = sourceSets.main.runtimeClasspath
}
